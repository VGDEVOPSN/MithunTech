pipeline{

agent any
tools{
maven 'maven3.8.6'
}

triggers {
  pollSCM '* * * * *'
  //cron '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}

stages{
	    //get the source code
		stage('CheckOutCode'){
			steps{
			    slackNotifications('STARTED')
				git branch: 'development', credentialsId: '948bdcbd-bd92-47d2-a1a6-2a08f8b2b856', url: 'https://github.com/VGDEVOPSN/MithunTech.git'
			}
		}
	    //Build
		stage('Build'){
			steps{
				//sh "${mavenHome}/bin/mvn package"
				sh "mvn clean package"
			}
		}
	    //Execute sonarqube Report
		stage('ExecuteSonarqubeReport'){
			steps{
				sh "mvn sonar:sonar"
			}
		}
		//Upload Artifacts into nexus server
		stage('NexusServer'){
			steps{
				sh "mvn deploy"
			}
		}
		//Deploy App Into Tomcat Server
		stage('DeployAppIntoTomcatServer'){
			steps{
				sshagent(['3362667f-bdc6-4fc5-a295-34ee0cf9d132']) {
				sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.40.147:/root/apache-tomcat-9.0.70/webapps/"
				}
			}
		}
	}//stages ends
post {
	  aborted {   
		slackNotifications(currentBuild.result)
	  }
	  success {
		slackNotifications(currentBuild.result)
	  }
	  failure {
		slackNotifications(currentBuild.result)
	  }
	}
}//pipeline ends

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  //build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
