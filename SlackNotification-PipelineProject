node {'walmartnode') {
try{ 
slackNotifications('STARTED')

def mavenHome = tool name: 'maven3.8.6'
 
 echo "The JobName is: ${env.JOB_NAME}" 
 echo "The node name is: ${env.NODE_NAME}"
 echo "The build number is: ${env.BUILD_NUMBER}"
 
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '7', daysToKeepStr: '', numToKeepStr: '7')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
  

  stage('CheckOutCode'){
  git branch: 'development', credentialsId: '0bf969e1-8dcf-42ea-839d-225b30afadcc', url:'https://github.com/gangal2710/maven-web-application.git'
  }
  
  stage('Build'){
  sh "${mavenHome}/bin/mvn package"
  }

	/*
	stage('ExecuteSonarQubeReport')
	{
	sh "${mavenHome}/bin/mvn clean sonar:sonar"
	}
	
	stage('UploadArtifactIntoNexus')
	{
	sh "${mavenHome}/bin/mvn clean deploy"
	}
	
	stage ('DeployAppIntoTomcatServer')
	{
	sshagent(['5cdbc8e9-b7d4-43f1-b019-1c4e2c90e88d']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war 
	ec2-user@172.31.14.139:/opt/apache-tomcat-9.0.65/webapps/"
	}
	}
	*/
	
}// try closing 
catch(e){
currentBuild.result='FAILURE'
throw e
}// catch closing
finally{
slackNotifications(currentBuild.result)
} 

} // node closing



//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  // build Status =  buildStatus ?: 'SUCCESS'
  buildStatus = buildStatus ? "SUCCESS":"FAILURE"
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
